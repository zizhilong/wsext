package com.daima.exthelp.Comple.Runner;

import com.daima.exthelp.Exp.PExp.Parser;
import com.daima.exthelp.Exp.PExp.Result;
import com.intellij.codeInsight.completion.CompletionParameters;
import com.intellij.codeInsight.completion.CompletionResultSet;
import com.intellij.codeInsight.lookup.LookupElementBuilder;
import com.intellij.icons.AllIcons;
import com.intellij.openapi.diagnostic.Logger;
import com.intellij.psi.PsiElement;
import com.intellij.util.ProcessingContext;
import org.jetbrains.annotations.NotNull;

import java.util.HashMap;
import java.util.Map;

public class Xtype extends CompleBase implements CompleRunner {
    private static final Logger LOG = Logger.getInstance(Xtype.class);
    Parser xtypeParser=new Parser("LY{name xtype}");
    static Map<String, String> map = new HashMap<>();
    static{
        map.put("component", "命名空间");
        map.put("box", "命名空间");
        map.put("editor", "编辑器");
        map.put("image", "图片");
        map.put("imagecomponent", "图片");
        map.put("loadmask", "模式化的浮动组件");
        map.put("progress", "简单的进度条部件");
        map.put("progressbarwidget", "简单的进度条部件");
        map.put("progressbar", "更新的进度条组件");
        map.put("widget", "轻量级组件");
        map.put("button", "按钮");
        map.put("cycle", "按钮循环选择");
        map.put("segmentedbutton", "分段按钮");
        map.put("splitbutton", "分裂按钮");
        map.put("calendar", "日历面板");
        map.put("cartesian", "笛卡尔图表");
        map.put("chart", "图表");
        map.put("polar", "极坐标图表");
        map.put("spacefilling", "填充图表");
        map.put("axis", "坐标轴");
        map.put("axis3d", "3D坐标轴");
        map.put("interaction", "图表交互");
        map.put("chartnavigator", "图表导航器");
        map.put("buttongroup", "按钮组");
        map.put("container", "容器");
        map.put("viewport", "视口");
        map.put("dashboard", "仪表板");
        map.put("draw", "绘图容器");
        map.put("surface", "绘图表面");
        map.put("flash", "Flash组件");
        map.put("checkboxgroup", "复选框组");
        map.put("fieldcontainer", "字段容器");
        map.put("fieldset", "字段集");
        map.put("label", "标签");
        map.put("form", "表单面板");
        map.put("radiogroup", "单选框组");
        map.put("field", "字段");
        map.put("checkboxfield", "复选框字段");
        map.put("checkbox", "复选框");
        map.put("combobox", "组合框");
        map.put("combo", "组合框");
        map.put("datefield", "日期字段");
        map.put("displayfield", "显示字段");
        map.put("filefield", "文件字段");
        map.put("fileuploadfield", "文件上传字段");
        map.put("filebutton", "文件按钮");
        map.put("hiddenfield", "隐藏字段");
        map.put("hidden", "隐藏字段");
        map.put("htmleditor", "HTML编辑器");
        map.put("numberfield", "数字字段");
        map.put("pickerfield", "选择字段");
        map.put("radiofield", "单选框字段");
        map.put("radio", "单选框");
        map.put("spinnerfield", "微调字段");
        map.put("tagfield", "标签字段");
        map.put("textfield", "文本字段");
        map.put("textareafield", "文本区域字段");
        map.put("textarea", "文本区域");
        map.put("timefield", "时间字段");
        map.put("triggerfield", "触发字段");
        map.put("trigger", "触发字段");
        map.put("froalaeditor", "Froala编辑器");
        map.put("froalaeditorfield", "Froala编辑器字段");
        map.put("celleditor", "单元格编辑器");
        map.put("gridpanel", "表格面板");
        map.put("grid", "表格");
        map.put("roweditor", "行编辑器");
        map.put("roweditorbuttons", "行编辑器按钮");
        map.put("actioncolumn", "操作列");
        map.put("booleancolumn", "布尔列");
        map.put("checkcolumn", "检查列");
        map.put("gridcolumn", "表格列");
        map.put("datecolumn", "日期列");
        map.put("groupscolumn", "分组列");
        map.put("numbercolumn", "数字列");
        map.put("rownumberer", "行号列");
        map.put("templatecolumn", "模板列");
        map.put("widgetcolumn", "小部件列");
        map.put("headercontainer", "表头容器");
        map.put("groupingpanelcolumn", "分组面板列");
        map.put("groupingpanel", "分组面板");
        map.put("propertygrid", "属性表格");
        map.put("columnsplitter", "列分隔器");
        map.put("treelist", "树形列表");
        map.put("treelistitem", "树形列表项");
        map.put("menubar", "菜单栏");
        map.put("menucheckitem", "菜单复选项");
        map.put("colormenu", "颜色选择菜单");
        map.put("datemenu", "日期选择菜单");
        map.put("menuitem", "菜单项");
        map.put("menu", "菜单");
        map.put("menuseparator", "菜单分隔符");
        map.put("header", "面板标题");
        map.put("panel", "面板");
        map.put("tablepanel", "表格面板");
        map.put("title", "面板标题");
        map.put("tool", "工具");
        map.put("colorpicker", "颜色选择器");
        map.put("datepicker", "日期选择器");
        map.put("monthpicker", "月份选择器");
        map.put("timepicker", "时间选择器");
        map.put("pivotgrid", "数据透视表格");
        map.put("mzpivotgrid", "数据透视表格");
        map.put("pivotd3container", "数据透视D3容器");
        map.put("pivotheatmap", "数据透视热力图");
        map.put("pivottreemap", "数据透视树图");
        map.put("pivotconfigfield", "数据透视配置字段");
        map.put("pivotconfigcontainer", "数据透视配置容器");
        map.put("pivotconfigpanel", "数据透视配置面板");
        map.put("bordersplitter", "边界分隔器");
        map.put("splitter", "分隔器");
        map.put("multislider", "多滑块");
        map.put("slider", "滑块");
        map.put("sliderfield", "滑块字段");
        map.put("slidertip", "滑块提示");
        map.put("sliderwidget", "滑块小部件");
        map.put("sparklinebar", "条形图");
        map.put("sparkline", "迷你图");
        map.put("sparklinebox", "箱形图");
        map.put("sparklinebullet", "子弹图");
        map.put("sparklinediscrete", "离散图");
        map.put("sparklineline", "折线图");
        map.put("sparklinepie", "饼图");
        map.put("sparklinetristate", "三态图");
        map.put("tabbar", "标签栏");
        map.put("tabpanel", "标签面板");
        map.put("tab", "标签");
        map.put("quicktip", "快速提示");
        map.put("tip", "提示");
        map.put("tooltip", "工具提示");
        map.put("breadcrumb", "面包屑导航");
        map.put("tbfill", "工具栏填充");
        map.put("tbitem", "工具栏项");
        map.put("pagingtoolbar", "分页工具栏");
        map.put("tbseparator", "工具栏分隔符");
        map.put("tbspacer", "工具栏间隔");
        map.put("tbtext", "工具栏文本项");
        map.put("toolbar", "工具栏");
        map.put("treecolumn", "树列");
        map.put("treepanel", "树面板");
        map.put("treeview", "树视图");
        map.put("explorer", "资源管理器");
        map.put("gmappanel", "谷歌地图面板");
        map.put("uxiframe", "IFrame扩展");
        map.put("treepicker", "树选择器");
        map.put("colorbutton", "颜色按钮");
        map.put("colorpickercolormap", "颜色选择器地图");
        map.put("colorpickercolorpreview", "颜色选择器预览");
        map.put("colorfield", "颜色字段");
        map.put("colorselector", "颜色选择器");
        map.put("colorpickerslider", "颜色选择器滑块");
        map.put("colorpickerslideralpha", "颜色选择器透明度滑块");
        map.put("colorpickersliderhue", "颜色选择器色调滑块");
        map.put("colorpickerslidersaturation", "颜色选择器饱和度滑块");
        map.put("colorpickerslidervalue", "颜色选择器明度滑块");
        map.put("desktop", "桌面");
        map.put("taskbar", "任务栏");
        map.put("trayclock", "托盘时钟");
        map.put("video", "视频");
        map.put("wallpaper", "壁纸");
        map.put("eventrecordermanager", "事件记录管理器");
        map.put("itemselectorfield", "项目选择器字段");
        map.put("itemselector", "项目选择器");
        map.put("multiselectfield", "多选字段");
        map.put("multiselect", "多选");
        map.put("searchfield", "搜索字段");
        map.put("gauge", "仪表");
        map.put("rating", "评分选择器");
        map.put("statusbar", "状态栏");
        map.put("boundlist", "绑定列表");
        map.put("multiselector", "多选择器");
        map.put("tableview", "表格视图");
        map.put("gridview", "表格视图");
        map.put("dataview", "数据视图");
        map.put("messagebox", "消息框");
        map.put("toast", "消息提示");
        map.put("window", "窗口");
    }

    public  boolean addCompletions(@NotNull CompletionParameters parameters, @NotNull ProcessingContext context, @NotNull CompletionResultSet result) {
        result.restartCompletionWhenNothingMatches();
        PsiElement position = parameters.getPosition();
        Result ret = xtypeParser.RunExp(position.getParent());
        if (ret == null) {
            return false;
        }
        LOG.info("XtypeRun");
        //存储这个Map
        //Load loadInstance = Load.getInstance();
        //Map<String, String> xtypeMap= loadInstance.getXtypeMap();
        //List<LookupElementBuilder> lookupElements = new ArrayList<>();
        //取得头字母
        //char prefix = getPrefix(parameters.getPosition(), parameters.getOffset());
        for (Map.Entry<String, String> entry : map.entrySet()) {


            result.addElement(      LookupElementBuilder.create(entry.getKey())
                    .withTypeText(entry.getValue())
                    .withIcon(AllIcons.Nodes.Class));
        }
        return true;
    }
}
